@import "../config/base-vars";
@import "../../../../../bower_components/bootstrap/scss/mixins";
@import "../../../../../bower_components/breakpoint-sass/stylesheets/breakpoint";

@mixin glyphAddBefore($html-entity, $size: 16px, $color: '') {
  &:before {
    font-family: $font-glyph-lib;
    content: $html-entity;
    font-size: $size;
    @if ($color != '') {
      color: $color;
    }
    display: inline-block;
    vertical-align: middle;
    line-height: 1;
    font-weight: normal;
    font-style: normal;
    text-decoration: inherit;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-shadow: -1px 1px 1px rgba(0, 0, 0, 0.41);
  }
}

@mixin glyphAddAfter($html-entity, $size: 16px, $color: '') {
  &:after {
    font-family: $font-glyph-lib;
    content: $html-entity;
    font-size: $size;
    @if ($color != '') {
      color: $color;
    }
    display: inline-block;
    vertical-align: middle;
    line-height: 1;
    font-weight: normal;
    font-style: normal;
    text-decoration: inherit;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-shadow: -1px 1px 1px rgba(0, 0, 0, 0.41);
  }
}

@mixin addActionButtonBorder($color: '') {
  border-bottom: 4px solid $color;

  &:hover {
    background-color: $color;
  }

  @include breakpoint($bp-tablets-portrait) {
    border-left: 8px solid $color;
    border-bottom: none;
  }
}

@mixin addTagStyle() {
  & {
    padding: 0 10px;
    height: 30px;
    background-color: $color-app-sub-grey;
    text-transform: initial;
    box-shadow: -1px 1px 2px rgba(78, 78, 78, 0.45);

    &:hover {
      background-color: darken($color-app-sub-grey, 5%);
      box-shadow: -1px 1px 4px darken(rgba(78, 78, 78, 0.45), 5%);
    }
  }

  &:before {
    margin-right: 5px;
    transform: rotateY(180deg);
  }
}

@function getScoreColorForLevel($scoreLevel: 'average') {
  @if($scoreLevel == 'high') {
    @return $color-app-high;
  }
  @else if($scoreLevel == 'low') {
    @return $color-app-low;
  }
  @else {
    @return $color-app-average;
  }
}


@mixin addScoreBarColors($scoreLevel: 'average') {
  .score-bar-value {
      background-color: getScoreColorForLevel($scoreLevel);
  }
}

@mixin addScoreTextColors($scoreLevel: 'average') {
  .score-value {
    color: darken(getScoreColorForLevel($scoreLevel), 20%);

    &:after {
      color: #373a3c;
    }
  }
}
